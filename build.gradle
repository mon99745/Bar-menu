buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	// querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}


group = 'danta'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'junit:junit:4.13.1'
	implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//lombok 의존성 추가
	compileOnly 'org.projectlombok:lombok'

	// sql 의존성 추가
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	// +JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// +Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// For inject
	implementation group: 'javax.inject', name: 'javax.inject', version: '1'

	// For commons
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

	// QueryDSL
	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	// https://mvnrepository.com/artifact/io.socket/socket.io-client
	implementation group: 'io.socket', name: 'socket.io-client', version: '2.1.0'
}

// QueryDSL
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

test {
	useJUnitPlatform()
}

